process PROD  = 
{

    # The number of events to be processed.
    untracked PSet maxEvents = {untracked int32 input = 1000}
    
    service =  RandomNumberGeneratorService {
	untracked uint32 sourceSeed = 123456789
	# This is to initialize the random engine of Famos
	# Watch out! This works only if the FamosProducer label is "famosSimHits"
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared = 123456789
	    untracked uint32 famosSimHits = 13579
	    untracked uint32 siTrackerGaussianSmearingRecHits = 24680
	    untracked uint32 caloRecHits = 654321
	}
    }
    
    /* */
    source = PythiaSource {
	
	PSet PythiaParameters = {
	    
	    # This is a vector of ParameterSet names to be read, in this order
	    # The first two are in the include files below
	    # The last one are simply my additional parameters
	    vstring parameterSets = {
		#	"pythiaMinBias", 
		"myParameters"
	    }
	    #
	    # Default cards for minimum bias events (unfiltered)
	    # Name of the set is "pythiaMinBias"
	    #include "IOMC/GeneratorInterface/test/pythiaMinBias.cfg"
	    #
	    # User cards - name is "myParameters"
	    # Pythia's random generator initialization 
	    vstring myParameters = {
		'MSEL=0 ! Users defined processes',
		'MSUB(102)=1 ! Define the process : gg -> H',
		'PMAS(23,1)=91.188 ! Z mass',
		'PMAS(24,1)=80.450 ! W mass',
		'PMAS(25,1)=180.00 ! H mass',
		'MDME(210,1)=0 ! Switch off Higgs decay channels',
		'MDME(211,1)=0',
		'MDME(212,1)=0',
		'MDME(213,1)=0',
		'MDME(214,1)=0',
		'MDME(215,1)=0',
		'MDME(216,1)=0',
		'MDME(217,1)=0',
		'MDME(218,1)=0',
		'MDME(219,1)=0',
		'MDME(220,1)=0',
		'MDME(221,1)=0',
		'MDME(222,1)=0',
		'MDME(223,1)=0',
		'MDME(224,1)=0',
		'MDME(225,1)=1 ! H -> ZZ switched on',
		'MDME(226,1)=0',
		'MDME(174,1)=0 ! Switch off Z decay channels',
		'MDME(175,1)=0',
		'MDME(176,1)=0',
		'MDME(177,1)=0',
		'MDME(178,1)=0',
		'MDME(179,1)=0',
		'MDME(180,1)=0',
		'MDME(181,1)=0',
		'MDME(182,1)=1 ! Z -> e+e- switched on',
		'MDME(183,1)=0',
		'MDME(184,1)=1 ! Z -> mu+mu- switched on',
		'MDME(185,1)=0',
		'MDME(186,1)=0',
		'MDME(187,1)=0',
		'MSTJ(22)=2   ! Do not decay unstable particles',
		'PARJ(71)=10. ! with c*tau > cTauMin (in mm) in PYTHIA' 
	    }
	    
	}
    }	
    /* */
    
    /*
    source = FlatRandomPtGunSource 
    {	 
	untracked uint32 firstRun  = 1
	untracked      PSet  PGunParameters =
	{
	    # you can request more than 1 particle
	    #untracked vint32  PartID = { 211, 11, -13 }
	    untracked vint32 PartID = {13} 
	    untracked double MinEta = -2.0
	    untracked double MaxEta = 2.0
	    untracked double MinPhi = -3.14159265358979323846  # it must be in radians
	    untracked double MaxPhi =  3.14159265358979323846
	    untracked double MinPt   = 10.
	    untracked double MaxPt   = 10.
	}      
	untracked int32 Verbosity = 0 # for printouts, set it to 1 (or greater)   
    }	
    */
    
    # Famos sequences
    include "FastSimulation/Configuration/data/FamosSequences.cff"
    replace VolumeBasedMagneticFieldESProducer.useParametrizedTrackerField = true
    replace famosSimHits.SimulateCalorimetry = true
    replace famosSimHits.SimulateTracking = true
    replace famosSimHits.SimulatePileUp = true

#    service = Timing { }
#    service = SimpleProfiling { }
    
    path p1 = { 
	# VtxSmeared, # No need to use it!
	# genParticleCandidates, # this is slow - No need to use it!
	famosWithTracksAndEcalClusters
    }

    /*
    module o1 = PoolOutputModule { 
	untracked string fileName = "test.root" 
    }
    endpath outpath = { o1 }
    */
    
    # Keep the logging output to a nice level #
    include "FWCore/MessageService/data/MessageLogger.cfi"
    replace MessageLogger.destinations = {"detailedInfo.txt"}
    
}		
